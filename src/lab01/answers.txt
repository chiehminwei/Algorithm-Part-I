/* *****************************************
* CSCI205 - Software Engineering and Design
* Spring 2017
* Instructor: Your instructor
* Section: List time of your lecture
*
* Name: Jimmy Wei
* Date: 08/23/2017
*
* Lab / Assignment: Lab 01
*
* Description: First Java Program
*
* *****************************************/

1.1 /Users/Jimmy

1.2 -a      Include directory entries whose names begin with a dot (.).

1.3 -l      (The lowercase letter ``ell''.)  List in long format.  (See
             below.)  If the output is to a terminal, a total sum for all the
             file sizes is output on a line before the long listing.

1.4 -t      Sort by time modified (most recently modified first) before sort-
             ing the operands by lexicographical order.

1.5 -r      Reverse the order of the sort to get reverse lexicographical
             order or the oldest entries first (or largest files last, if com-
             bined with sort by size

1.6 -S      Sort files by size

1.7 
total 0
drwxr-xr-x  4 Jimmy  staff  136 Aug 23 01:29 src

csci205/src:
total 0
drwxr-xr-x  3 Jimmy  staff  102 Aug 23 01:34 lab01

csci205/src/lab01:
total 8
-rw-r--r--  1 Jimmy  staff  639 Aug 23 17:25 answers.txt

======================================================================================
2.1 Version control is a system that records changes to a file or set of files over time so that you can recall specific versions later.


2.2 
Local Version Control Systems: the most simple approach although also the most error prone. Can be useful when internet access is limited.

Centralized Version Control Systems: Administrators have fine-grained control over who can do what. Can be useful when working in a team environment.

Distributed Version Control Systems: Clients fully mirror the whole repository. Every clone is a full backup of all the data. Useful for setting up several types of workflows that aren’t possible in centralized systems, such as hierarchical models.


2.3 Git is the Distributed Version Control System.

2.4 This means that generally no information is needed from another computer on your network. One advantage is that most Git operations have no network latency overhead. Because you have the entire history of the project right there on your local disk, most operations seem almost instantaneous.

Second advantage is that you can still do most of the things you want to do if you are offline or not connected to a VPN.

2.5 Git stores everything in its database not by file name but by the hash value (SHA - 1)
 of its contents.

2.6
Committed means that the data is already stored in the local database.
Modified means you have changed the data, but it is not stored in the database yet, and it is also not staged yet.
Staged means a file has been modified and added to the staging area; it will go into the next commit.

======================================================================================

3.1 Bytecodes is what's contain in a .class file, the machine language of the Java Virtual Machine. In the Java programming language, all source code is first written in plain text files ending with the .java extension. Those source files are then compiled into .class files by the javac compiler. 

3.2 One benefit is that JVM is a platform-independent environment, so the same code can be used to run on different machines (high portability) without the need to re-write code for each different hardware.

3.3 The downside to using a virtual machine as opposed to native code is that it cannot run as fast as native code due to time needed to first compile the source code into virtual machine code. This can cause some performance tradeoffs.

3.4 I do not believe everything I just read. This document claims that by using Java I can "write less code", but this is not true compared to Python. Python has a lot less overhead and a much simpler syntax, so it is arguably "less code" than Java.

3.5
/* text */
The compiler ignores everything from /* to */. Multi-line comments.
/** documentation */
This indicates a documentation comment (doc comment, for short). The compiler ignores this kind of comment, just like it ignores comments that use /* and */. The javadoc tool uses doc comments when preparing automatically generated documentation. For more information on javadoc, see the Javadoc™ tool documentation . Multi-line comments.
// text
The compiler ignores everything from // to the end of the line. Single-line comments.

3.6 If I'm working in a terminal, I must run the command javac to compile .java file:
javac path-to-file/file.java
And then I can use the command java to run the generated .class file:
java path-to-file/file

======================================================================================

4.1 Prints an Object and then terminate the line. This method calls at first String.valueOf(x) to get the printed object's string value, then behaves as though it invokes print(String) and then println().

4.2 The object "in" represents the "standard" input string, and it is an object of type InputStream.